<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diffwind.dao.mapper.XueqiuStockFinanceMapper">
  <resultMap id="BaseResultMap" type="com.diffwind.dao.model.XueqiuStockFinance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="symbol" jdbcType="CHAR" property="symbol" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="reportdate" jdbcType="DATE" property="reportdate" />
    <result column="basiceps" jdbcType="DOUBLE" property="basiceps" />
    <result column="epsdiluted" jdbcType="DOUBLE" property="epsdiluted" />
    <result column="epsweighted" jdbcType="DOUBLE" property="epsweighted" />
    <result column="naps" jdbcType="DOUBLE" property="naps" />
    <result column="opercashpershare" jdbcType="DOUBLE" property="opercashpershare" />
    <result column="peropecashpershare" jdbcType="DOUBLE" property="peropecashpershare" />
    <result column="netassgrowrate" jdbcType="DOUBLE" property="netassgrowrate" />
    <result column="dilutedroe" jdbcType="DOUBLE" property="dilutedroe" />
    <result column="weightedroe" jdbcType="DOUBLE" property="weightedroe" />
    <result column="mainbusincgrowrate" jdbcType="DOUBLE" property="mainbusincgrowrate" />
    <result column="netincgrowrate" jdbcType="DOUBLE" property="netincgrowrate" />
    <result column="totassgrowrate" jdbcType="DOUBLE" property="totassgrowrate" />
    <result column="salegrossprofitrto" jdbcType="DOUBLE" property="salegrossprofitrto" />
    <result column="mainbusiincome" jdbcType="DOUBLE" property="mainbusiincome" />
    <result column="mainbusiprofit" jdbcType="DOUBLE" property="mainbusiprofit" />
    <result column="totprofit" jdbcType="DOUBLE" property="totprofit" />
    <result column="netprofit" jdbcType="DOUBLE" property="netprofit" />
    <result column="totalassets" jdbcType="DOUBLE" property="totalassets" />
    <result column="totalliab" jdbcType="DOUBLE" property="totalliab" />
    <result column="totsharequi" jdbcType="DOUBLE" property="totsharequi" />
    <result column="operrevenue" jdbcType="DOUBLE" property="operrevenue" />
    <result column="invnetcashflow" jdbcType="DOUBLE" property="invnetcashflow" />
    <result column="finnetcflow" jdbcType="DOUBLE" property="finnetcflow" />
    <result column="chgexchgchgs" jdbcType="DOUBLE" property="chgexchgchgs" />
    <result column="cashnetr" jdbcType="DOUBLE" property="cashnetr" />
    <result column="cashequfinbal" jdbcType="DOUBLE" property="cashequfinbal" />
    
    <result column="pilu_date" jdbcType="DATE" property="piluDate" />
  </resultMap>
  <insert id="insert" parameterType="com.diffwind.dao.model.XueqiuStockFinance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into xueqiu_stock_finance (symbol, name, reportdate, 
      basiceps, epsdiluted, epsweighted, 
      naps, opercashpershare, peropecashpershare, 
      netassgrowrate, dilutedroe, weightedroe, 
      mainbusincgrowrate, netincgrowrate, totassgrowrate, 
      salegrossprofitrto, mainbusiincome, mainbusiprofit, 
      totprofit, netprofit, totalassets, 
      totalliab, totsharequi, operrevenue, 
      invnetcashflow, finnetcflow, chgexchgchgs, 
      cashnetr, cashequfinbal)
    values (#{symbol,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{reportdate,jdbcType=DATE}, 
      #{basiceps,jdbcType=DOUBLE}, #{epsdiluted,jdbcType=DOUBLE}, #{epsweighted,jdbcType=DOUBLE}, 
      #{naps,jdbcType=DOUBLE}, #{opercashpershare,jdbcType=DOUBLE}, #{peropecashpershare,jdbcType=DOUBLE}, 
      #{netassgrowrate,jdbcType=DOUBLE}, #{dilutedroe,jdbcType=DOUBLE}, #{weightedroe,jdbcType=DOUBLE}, 
      #{mainbusincgrowrate,jdbcType=DOUBLE}, #{netincgrowrate,jdbcType=DOUBLE}, #{totassgrowrate,jdbcType=DOUBLE}, 
      #{salegrossprofitrto,jdbcType=DOUBLE}, #{mainbusiincome,jdbcType=DOUBLE}, #{mainbusiprofit,jdbcType=DOUBLE}, 
      #{totprofit,jdbcType=DOUBLE}, #{netprofit,jdbcType=DOUBLE}, #{totalassets,jdbcType=DOUBLE}, 
      #{totalliab,jdbcType=DOUBLE}, #{totsharequi,jdbcType=DOUBLE}, #{operrevenue,jdbcType=DOUBLE}, 
      #{invnetcashflow,jdbcType=DOUBLE}, #{finnetcflow,jdbcType=DOUBLE}, #{chgexchgchgs,jdbcType=DOUBLE}, 
      #{cashnetr,jdbcType=DOUBLE}, #{cashequfinbal,jdbcType=DOUBLE})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select symbol, name, reportdate, basiceps, epsdiluted, epsweighted, naps, opercashpershare, 
    peropecashpershare, netassgrowrate, dilutedroe, weightedroe, mainbusincgrowrate, 
    netincgrowrate, totassgrowrate, salegrossprofitrto, mainbusiincome, mainbusiprofit, 
    totprofit, netprofit, totalassets, totalliab, totsharequi, operrevenue, invnetcashflow, 
    finnetcflow, chgexchgchgs, cashnetr, cashequfinbal
    from xueqiu_stock_finance
  </select>
  
  
  <!-- 按财报日排序，使用时应当注意或许存在年报与下年一季报颠倒披露的情况，即先披露一季报后披露上年年报，按说不存在 -->
  <select id="selectBySymbol" parameterType="java.lang.String" resultMap="BaseResultMap">
    select f.symbol, f.name, f.reportdate, f.basiceps, f.epsdiluted, f.epsweighted, f.naps, f.opercashpershare, f.
    peropecashpershare, f.netassgrowrate, f.dilutedroe, f.weightedroe, f.mainbusincgrowrate, f.
    netincgrowrate, f.totassgrowrate, f.salegrossprofitrto, f.mainbusiincome, f.mainbusiprofit, f.
    totprofit, f.netprofit, f.totalassets, f.totalliab, f.totsharequi, f.operrevenue, f.invnetcashflow, f.
    finnetcflow, f.chgexchgchgs, f.cashnetr, f.cashequfinbal, b.pilu_date
    from xueqiu_stock_finance f left join eastmoney_stock_bbsj b
	on(substr(f.symbol, 3, 6) = b.code and f.reportdate = b.finance_date)
    where f.symbol = #{symbol}
    order by f.reportdate desc
  </select>
  
  <!-- 查询所有股票最新的季报 -->
  <select id="selectAllStkLastReportdate" resultMap="BaseResultMap">
  	select symbol, reportdate 
	from (select *,row_number() over (partition by symbol order by reportdate desc) rn from xueqiu_stock_finance) f 
	where rn=1
  </select>
  
  <!--  <select id="selectByYingli5Y" resultMap="BaseResultMap">
  	select f1.* 
	from xueqiu_stock_finance f1,xueqiu_stock_finance f2,xueqiu_stock_finance f3,xueqiu_stock_finance f4,xueqiu_stock_finance f5
	where f1.reportdate = make_date(extract(year from now())::int-1,12,31)
	and f1.netprofit > 10*1e8 
	and f1.weightedroe > 10 
	and f2.reportdate = make_date(extract(year from now())::int-2,12,31)
	and f2.netprofit > 10*1e8 
	and f2.weightedroe > 10 
	and f3.reportdate = make_date(extract(year from now())::int-3,12,31)
	and f3.netprofit > 10*1e8 
	and f3.weightedroe > 10 
	and f4.reportdate = make_date(extract(year from now())::int-4,12,31)
	and f4.netprofit > 10*1e8 
	and f4.weightedroe > 10 
	and f5.reportdate = make_date(extract(year from now())::int-5,12,31)
	and f5.netprofit > 10*1e8 
	and f5.weightedroe > 10 
	and f1.symbol = f2.symbol
	and f1.symbol = f3.symbol
	and f1.symbol = f4.symbol
	and f1.symbol = f5.symbol
  </select>
   -->
  
  <select id="selectByYingli5Y" resultMap="BaseResultMap">
  	with qx as (select f1.* 
	from xueqiu_stock_finance f1,xueqiu_stock_finance f2,xueqiu_stock_finance f3,xueqiu_stock_finance f4,xueqiu_stock_finance f5
	where f1.reportdate = make_date(extract(year from now())::int-1,12,31)
	and f1.netprofit > 5e8 -- 根据行业调整
	and f1.weightedroe > 5 -- 根据行业调整
	and f2.reportdate = make_date(extract(year from now())::int-2,12,31)
	and f2.netprofit > 5e8 -- 根据行业调整
	and f2.weightedroe > 5 -- 根据行业调整
	and f3.reportdate = make_date(extract(year from now())::int-3,12,31)
	and f3.netprofit > 5e8 -- 根据行业调整
	and f3.weightedroe > 5 -- 根据行业调整
	and f4.reportdate = make_date(extract(year from now())::int-4,12,31)
	and f4.netprofit > 5e8 -- 根据行业调整
	and f4.weightedroe > 5 -- 根据行业调整
	and f5.reportdate = make_date(extract(year from now())::int-5,12,31)
	and f5.netprofit > 5e8 -- 根据行业调整
	and f5.weightedroe > 5 -- 根据行业调整
	and f1.symbol = f2.symbol
	and f1.symbol = f3.symbol
	and f1.symbol = f4.symbol
	and f1.symbol = f5.symbol
	)
	select qx.reportdate,qx.symbol,h.name,h.hyname,
	qx.netprofit,qx.weightedroe,
	qx.mainbusiincome, qx.mainbusiprofit,
	qx.netassgrowrate, qx.mainbusincgrowrate,
	qx.netincgrowrate, qx.totassgrowrate, 
	qx.totalassets, qx.totalliab, qx.totsharequi, qx.cashequfinbal
	from qx left join 
	(select symbol, name, string_agg(hyname,',' order by hycode desc) "hyname" from sina_zjhhangye_stock group by symbol,name) h
	on (qx.symbol = h.symbol)
	-- on (qx.symbol = h.symbol and  h.hycode like 'hangye%') -- 只输出行业不输出概念板块
  </select>
  
   <select id="selectBySymbol5Y" parameterType="java.lang.String" resultMap="BaseResultMap">
    select symbol, name, reportdate, basiceps, epsdiluted, epsweighted, naps, opercashpershare, 
    peropecashpershare, netassgrowrate, dilutedroe, weightedroe, mainbusincgrowrate, 
    netincgrowrate, totassgrowrate, salegrossprofitrto, mainbusiincome, mainbusiprofit, 
    totprofit, netprofit, totalassets, totalliab, totsharequi, operrevenue, invnetcashflow, 
    finnetcflow, chgexchgchgs, cashnetr, cashequfinbal
    from xueqiu_stock_finance
    where symbol = #{symbol}
    and (reportdate = make_date(extract(year from now())::int-1,12,31)
         or reportdate = make_date(extract(year from now())::int-2,12,31)
         or reportdate = make_date(extract(year from now())::int-3,12,31)
         or reportdate = make_date(extract(year from now())::int-4,12,31)
         or reportdate = make_date(extract(year from now())::int-5,12,31) )
    order by reportdate desc
  </select>
  
  <select id="selectForClusterAnalysis" resultMap="BaseResultMap">
  	select f1.*
	from xueqiu_stock_finance f1
	where f1.reportdate = make_date(extract(year from now())::int-1,12,31)
	and f1.netprofit > 0
	and f1.weightedroe > 0
  </select>
  
  
  <select id="selectForYingliClassify" resultMap="BaseResultMap">
  	select f1.*
	from xueqiu_stock_finance f1
	where f1.reportdate = make_date(extract(year from now())::int-1,12,31)
	and f1.netprofit >= 5e8
	and f1.weightedroe >= 5
  </select>
  
  
  <select id="selectByYingli5YForClassify" resultMap="BaseResultMap">
  	with qx as (select f1.* 
	from xueqiu_stock_finance f1,xueqiu_stock_finance f2,xueqiu_stock_finance f3,xueqiu_stock_finance f4,xueqiu_stock_finance f5
	where f1.reportdate = make_date(extract(year from now())::int-1,12,31)
	and f1.netprofit > 2e8 -- 根据行业调整
	and f1.weightedroe > 10 -- 根据行业调整
	and f2.reportdate = make_date(extract(year from now())::int-2,12,31)
	and f2.netprofit > 2e8 -- 根据行业调整
	and f2.weightedroe > 10 -- 根据行业调整
	and f3.reportdate = make_date(extract(year from now())::int-3,12,31)
	and f3.netprofit > 2e8 -- 根据行业调整
	and f3.weightedroe > 10 -- 根据行业调整
	and f4.reportdate = make_date(extract(year from now())::int-4,12,31)
	and f4.netprofit > 2e8 -- 根据行业调整
	and f4.weightedroe > 10 -- 根据行业调整
	and f5.reportdate = make_date(extract(year from now())::int-5,12,31)
	and f5.netprofit > 2e8 -- 根据行业调整
	and f5.weightedroe > 10 -- 根据行业调整
	and f1.symbol = f2.symbol
	and f1.symbol = f3.symbol
	and f1.symbol = f4.symbol
	and f1.symbol = f5.symbol
	)
	select qx.reportdate,qx.symbol,h.name,h.hyname,
	qx.netprofit,qx.weightedroe,
	qx.mainbusiincome, qx.mainbusiprofit,
	qx.netassgrowrate, qx.mainbusincgrowrate,
	qx.netincgrowrate, qx.totassgrowrate, 
	qx.totalassets, qx.totalliab, qx.totsharequi, qx.cashequfinbal
	from qx left join 
	(select symbol, name, string_agg(hyname,',' order by hycode desc) "hyname" from sina_zjhhangye_stock group by symbol,name) h
	on (qx.symbol = h.symbol)
	-- on (qx.symbol = h.symbol and  h.hycode like 'hangye%') -- 只输出行业不输出概念板块
  </select>
</mapper>